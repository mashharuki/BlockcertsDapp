# Use Ethereum chain: 
#   development: "goerli"
#   production: "mainnet"
# Use Polygon chain: 
#   development: "polygonMumbai"
#   production: "polygon"
NODE_ENV=""

# Set uploaded contract adress. 
#   ./README.md > ### NFT 発行フロー > 3. コントラクトのデプロイ
CONTRACT_ADDRESS=""

# www.alchemy.com (Ethereum)
MAINNET_ALCHEMY_URL=""
GOERLI_ALCHEMY_URL=""
# www.alchemy.com (Polygon)
POLYGON_ALCHEMY_URL=""
MUMBAI_ALCHEMY_URL=""

# IPFS adress for upload vc,nft,vc-image
#   default: https://gateway.pinata.cloud/ipfs/
# www.pinata.cloud
PINATA_PRODUCTION_IPFS_URL_PREFIX=""
PINATA_DEVELOPMENT_IPFS_URL_PREFIX=""
PINATA_API_KEY=""
PINATA_SECRET_API_KEY=""

# etherscan.io apikey (use when cert-issuer and uploading the contract code)
ETHERSCAN_API_TOKEN=""
# polygonscan.com apikey (use when uploading the contract code)
POLYGONSCAN_API_TOKEN=""

# verify host
VERIFY_HOST_URL=
VERIFY_HOST_URL_DEV=""

# issuerDID
ISSUER_DID_DEV=""
ISSUER_DID_PRD=""

# Admin's wallet
# development:
#   - public: 0x1234567890123456789012345678901234567890
#   - private: refer to ./keys/wallet-private.dev.key
PUBLIC_KEY=""
PRIVATE_KEY=""

# Issuer Bucket
# If you hosting did.json and blockcerts.json to GCP Cloud Storage you can use this variables.
# ex) gs://nft-vc-development.com
GCS_BUCKET_NAME_DEVELOPMENT=""
GCS_BUCKET_NAME_PRODCUTION=""
